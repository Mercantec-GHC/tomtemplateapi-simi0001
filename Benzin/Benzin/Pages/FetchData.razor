@page "/fetchdata"
@inject IHttpClientFactory ClientFactory

<PageTitle>Weather forecast</PageTitle>

@using Benzin.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (data == null)
{
    <p>Loading...</p>
}
else if (data.Count == 0)
{
    <p>No data available.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Price</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in data)
            {
                <tr>
                    <td>@item.Price</td>
                    <td>@item.Date</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    private List<PriceDate>? data;


    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        var request = new HttpRequestMessage(HttpMethod.Get, "https://magsapi.onrender.com/api/miles95");
        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            data = await response.Content.ReadFromJsonAsync<List<PriceDate>>();
        }
    }
    public class PriceDate
    {
        public string Price { get; set; }
        public string Date { get; set; }
    }

}
